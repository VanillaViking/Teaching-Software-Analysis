digraph "ICFG" {
	label="ICFG";

	Node0x5dedaeb3b480 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n ptr null \{ constant data \}\nAddrStmt: [Var16 \<-- Var3]  \n i32 0 \{ constant data \}\nAddrStmt: [Var4 \<-- Var5]  \nFunction: bar \nAddrStmt: [Var9 \<-- Var10]  \nFunction: main \nAddrStmt: [Var13 \<-- Var14]  \nFunction: source \nAddrStmt: [Var20 \<-- Var21]  \nFunction: sink }"];
	Node0x5dedaeb3b480 -> Node0x5dedaeb12bd0[style=solid];
	Node0x5dedaeb10b40 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: bar\}}"];
	Node0x5dedaeb10b40 -> Node0x5dedaeb73430[style=solid];
	Node0x5dedaeb73430 [shape=record,color=black,label="{IntraICFGNode2 \{fun: bar\}\n   ret i32 %s }"];
	Node0x5dedaeb73430 -> Node0x5dedaeb9ec60[style=solid];
	Node0x5dedaeb9ec60 [shape=record,color=green,label="{FunExitICFGNode3 \{fun: bar\}\nPhiStmt: [Var6 \<-- ([Var7, ICFGNode2],)]  \n   ret i32 %s |{<s0>0x5dedaeb678e0|<s1>0x5dedaeb535e0}}"];
	Node0x5dedaeb9ec60:s0 -> Node0x5dedaeb9fac0[style=solid,color=blue];
	Node0x5dedaeb9ec60:s1 -> Node0x5dedaeb9be10[style=solid,color=blue];
	Node0x5dedaeb12bd0 [shape=record,color=yellow,label="{FunEntryICFGNode4 \{fun: main\}}"];
	Node0x5dedaeb12bd0 -> Node0x5dedaeb16490[style=solid];
	Node0x5dedaeb16490 [shape=record,color=red,label="{CallICFGNode5 \{fun: main\}\n   %call = call i32 (...) @source() }"];
	Node0x5dedaeb16490 -> Node0x5dedaeb2b280[style=solid];
	Node0x5dedaeb2b280 [shape=record,color=blue,label="{RetICFGNode6 \{fun: main\}\n   %call = call i32 (...) @source() }"];
	Node0x5dedaeb2b280 -> Node0x5dedaeb7bdd0[style=solid];
	Node0x5dedaeb7bdd0 [shape=record,color=black,label="{IntraICFGNode7 \{fun: main\}\nCmpStmt: [Var15 \<-- (Var12 predicate38 Var16)]  \n   %cmp = icmp sgt i32 %call, 0 }"];
	Node0x5dedaeb7bdd0 -> Node0x5dedaeb53510[style=solid];
	Node0x5dedaeb53510 [shape=record,color=black,label="{IntraICFGNode8 \{fun: main\}\nBranchStmt: [Condition Var15]\nSuccessor 0 ICFGNode9   Successor 1 ICFGNode11   \n   br i1 %cmp, label %if.then, label %if.else }"];
	Node0x5dedaeb53510 -> Node0x5dedaeb678e0[style=solid];
	Node0x5dedaeb53510 -> Node0x5dedaeb535e0[style=solid];
	Node0x5dedaeb678e0 [shape=record,color=red,label="{CallICFGNode9 \{fun: main\}\nCallPE: [Var7 \<-- Var12]  \n   %call1 = call i32 @bar(i32 noundef %call) |{<s0>0x5dedaeb678e0}}"];
	Node0x5dedaeb678e0:s0 -> Node0x5dedaeb10b40[style=solid,color=red];
	Node0x5dedaeb9fac0 [shape=record,color=blue,label="{RetICFGNode10 \{fun: main\}\nRetPE: [Var18 \<-- Var6]  \n   %call1 = call i32 @bar(i32 noundef %call) }"];
	Node0x5dedaeb9fac0 -> Node0x5dedaeb39e40[style=solid];
	Node0x5dedaeb535e0 [shape=record,color=red,label="{CallICFGNode11 \{fun: main\}\nCallPE: [Var7 \<-- Var12]  \n   %call2 = call i32 @bar(i32 noundef %call) |{<s0>0x5dedaeb535e0}}"];
	Node0x5dedaeb535e0:s0 -> Node0x5dedaeb10b40[style=solid,color=red];
	Node0x5dedaeb9be10 [shape=record,color=blue,label="{RetICFGNode12 \{fun: main\}\nRetPE: [Var24 \<-- Var6]  \n   %call2 = call i32 @bar(i32 noundef %call) }"];
	Node0x5dedaeb9be10 -> Node0x5dedaeb3c890[style=solid];
	Node0x5dedaeb39e40 [shape=record,color=red,label="{CallICFGNode13 \{fun: main\}\n   call void @sink(i32 noundef %call1) }"];
	Node0x5dedaeb39e40 -> Node0x5dedaeb9d6c0[style=solid];
	Node0x5dedaeb9d6c0 [shape=record,color=blue,label="{RetICFGNode14 \{fun: main\}\n   call void @sink(i32 noundef %call1) }"];
	Node0x5dedaeb9d6c0 -> Node0x5dedaeb266a0[style=solid];
	Node0x5dedaeb3c890 [shape=record,color=red,label="{CallICFGNode15 \{fun: main\}\n   call void @sink(i32 noundef %call2) }"];
	Node0x5dedaeb3c890 -> Node0x5dedaeb13e40[style=solid];
	Node0x5dedaeb13e40 [shape=record,color=blue,label="{RetICFGNode16 \{fun: main\}\n   call void @sink(i32 noundef %call2) }"];
	Node0x5dedaeb13e40 -> Node0x5dedaeb8a0c0[style=solid];
	Node0x5dedaeb266a0 [shape=record,color=black,label="{IntraICFGNode17 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode19   \n   br label %if.end }"];
	Node0x5dedaeb266a0 -> Node0x5dedaeb2b560[style=solid];
	Node0x5dedaeb8a0c0 [shape=record,color=black,label="{IntraICFGNode18 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode19   \n   br label %if.end }"];
	Node0x5dedaeb8a0c0 -> Node0x5dedaeb2b560[style=solid];
	Node0x5dedaeb2b560 [shape=record,color=black,label="{IntraICFGNode19 \{fun: main\}\n   ret i32 0 }"];
	Node0x5dedaeb2b560 -> Node0x5dedaeb84cc0[style=solid];
	Node0x5dedaeb84cc0 [shape=record,color=green,label="{FunExitICFGNode20 \{fun: main\}\nPhiStmt: [Var11 \<-- ([Var16, ICFGNode19],)]  \n   ret i32 0 }"];
}
